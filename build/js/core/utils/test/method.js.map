{"version":3,"sources":["../../../../../src/js/core/utils/test/method.js"],"names":["path","require","assert","requirejs","describe","method","before","jsdom","$","global","jQuery","html","config","nodeRequire","baseUrl","join","__dirname","after","it","done","init","element","target","context","local","options","_options","equal","_id","error","_init","key","value","args","component","hook"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;;AAEAG,SAAS,0BAAT,EAAqC,YAAM;AACvC,QAAIC,SAAS,IAAb;;AAEAC,WAAO,YAAW;AACd,aAAKC,KAAL,GAAaN,QAAQ,cAAR,GAAb;AACA,YAAIO,IAAIC,OAAOD,CAAP,GAAWC,OAAOC,MAAP,GAAgBT,QAAQ,QAAR,CAAnC;;AAEAO,UAAE,MAAF,EAAUG,IAAV;;AAKAR,kBAAUS,MAAV,CAAiB;AACbC,yBAAaZ,OADA;AAEba,qBAASd,KAAKe,IAAL,CAAUC,SAAV,EAAqB,IAArB;AAFI,SAAjB;AAIAb,kBAAU,WAAV;AACAE,iBAASF,UAAU,QAAV,CAAT;AACH,KAfD;;AAiBAc,UAAM,YAAW;AACb,aAAKV,KAAL;AACAF,iBAAS,IAAT;AACH,KAHD;;AAKAD,aAAS,kBAAT,EAA6B,YAAM;AAC/Bc,WAAG,mCAAH,EAAwC,UAACC,IAAD,EAAU;AAC9C,gBAAId,MAAJ,CAAW,WAAX,EAAwB;AACpBe,sBAAM,cAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC5B,wBAAIC,UAAU,IAAd;AACA,wBAAIC,QAAQD,QAAQC,KAApB;AACA,wBAAIC,UAAUD,MAAME,QAApB;;AAEA,wBAAI;AACAxB,+BAAOyB,KAAP,CAAaH,MAAMI,GAAnB,EAAwB,WAAxB,EAAqC,mCAArC;AACH,qBAFD,CAEE,OAAMC,KAAN,EAAa;AACX,+BAAOV,KAAKU,KAAL,CAAP;AACH;;AAED,wBAAI;AACA3B,+BAAOyB,KAAP,CAAaH,MAAMM,KAAnB,EAA0B,IAA1B,EAAgC,gCAAhC;AACH,qBAFD,CAEE,OAAMD,KAAN,EAAa;AACX,+BAAOV,KAAKU,KAAL,CAAP;AACH;;AAED,wBAAI;AACA3B,+BAAOyB,KAAP,CAAaF,QAAQM,GAArB,EAA0B,OAA1B,EAAmC,2CAAnC;AACH,qBAFD,CAEE,OAAMF,KAAN,EAAa;AACX,+BAAOV,KAAKU,KAAL,CAAP;AACH;;AAEDV;AACH;AAzBmB,aAAxB;;AA4BA,aAAC,UAASG,MAAT,EAAiBU,KAAjB,EAAwB;AACrB,oBAAIC,OAAO;AACPF,yBAAK;AADE,iBAAX;AAGA,qBAAKG,SAAL,CAAeD,IAAf;AACH,aALD,EAKGE,IALH,CAKQ,WALR;AAMH,SAnCD;AAoCH,KArCD;AAsCH,CA/DD","file":"method.js","sourcesContent":["var path = require('path');\r\nvar assert = require('assert');\r\nvar requirejs = require('requirejs');\r\n\r\ndescribe('[core/utils/method] TEST', () => {\r\n    var method = null;\r\n\r\n    before(function() {\r\n        this.jsdom = require('jsdom-global')();\r\n        var $ = global.$ = global.jQuery = require('jquery');\r\n\r\n        $('body').html(`\r\n            <div data-component=\"true\" data-pen=\"#pen\">COMPONENT</div>\r\n            <div id=\"pen\">PEN ELEMENT</div>\r\n        `);\r\n\r\n        requirejs.config({\r\n            nodeRequire: require,\r\n            baseUrl: path.join(__dirname, '..')\r\n        });\r\n        requirejs('prototype');\r\n        method = requirejs('method');\r\n    });\r\n\r\n    after(function() {\r\n        this.jsdom();\r\n        method = null;\r\n    });\r\n\r\n    describe('#1 method() TEST', () => {\r\n        it('@1 `component` METHOD DEFINITION.', (done) => {\r\n            new method('component', {\r\n                init: function(element, target) {\r\n                    var context = this;\r\n                    var local = context.local;\r\n                    var options = local._options;\r\n                    \r\n                    try {\r\n                        assert.equal(local._id, 'component', 'COMPONENT ID MUST BE `component`.');\r\n                    } catch(error) {\r\n                        return done(error);\r\n                    }\r\n\r\n                    try {\r\n                        assert.equal(local._init, true, 'COMPONENT INIT MUST BE `true`.');\r\n                    } catch(error) {\r\n                        return done(error);\r\n                    }\r\n\r\n                    try {\r\n                        assert.equal(options.key, 'value', 'COMPONENT OPTIONS OF KEY MUST BE `value`.');\r\n                    } catch(error) {\r\n                        return done(error);\r\n                    }\r\n\r\n                    done();\r\n                }\r\n            });\r\n\r\n            (function(target, value) {\r\n                var args = {\r\n                    key: 'value'\r\n                };          \r\n                this.component(args);\r\n            }).hook('component');\r\n        });\r\n    });\r\n});"]}