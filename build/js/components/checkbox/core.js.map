{"version":3,"sources":["../../../../src/js/components/checkbox/core.js"],"names":["define","data","helper","method","model","$","init","element","context","$checkbox","$helper","parseTemplate","$label","closest","length","wrap","addClass","insertAfter","ripple","theme","over","passive","bind","event","stopPropagation","extra","$this","triggerHandler","prop","removeClass","attr","match","class_names","idx","class_name","hide","template","checkbox","jQuery"],"mappings":";;AAAAA,OAAO,CACH,uBADG,EAEH,yBAFG,EAGH,yBAHG,EAIH,yBAJG,CAAP,EAKG,UAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,EAAuBC,KAAvB,EAAiC;AAC/B,eAAUC,CAAV,EAAa;AACV,YAAIF,MAAJ,CAAW,UAAX,EAAuB;AACnBG,kBAAM,cAAUC,OAAV,EAAmB;AACrB,oBAAIC,UAAU,IAAd;;AAEA,oBAAIC,YAAYJ,EAAEG,QAAQE,OAAR,CAAgBC,aAAhB,CAA8B,UAA9B,CAAF,CAAhB;AACA,oBAAIC,SAASL,QAAQM,OAAR,CAAgB,OAAhB,CAAb;AACA,oBAAID,OAAOE,MAAP,GAAgB,CAApB,EAAuB;AACnBP,4BAAQQ,IAAR,CAAa,gDAAb;AACH,iBAFD,MAEO;AACHH,2BAAOI,QAAP,CAAgB,wBAAhB;AACH;;AAEDP,0BAAUQ,WAAV,CAAsBV,OAAtB,EAA+BW,MAA/B,CAAsC;AAClCC,2BAAO,MAD2B;AAElCC,0BAAM,IAF4B;AAGlCC,6BAAS;AAHyB,iBAAtC;;AAMAb,wBAAQE,OAAR,CAAgBY,IAAhB,CAAqBf,QAAQM,OAAR,CAAgB,OAAhB,CAArB,EAA+C,OAA/C,EAAwD,UAAUU,KAAV,EAAiB;AACrEA,0BAAMC,eAAN;AACH,iBAFD;;AAIAhB,wBAAQE,OAAR,CAAgBY,IAAhB,CAAqBf,OAArB,EAA8B,QAA9B,EAAwC,UAAUgB,KAAV,EAAiBE,KAAjB,EAAwB;AAC5D,wBAAIC,QAAQrB,EAAE,IAAF,CAAZ;AACAI,8BAAUS,MAAV,CAAiB,OAAjB;AACAV,4BAAQE,OAAR,CAAgBiB,cAAhB,CAA+BpB,OAA/B,EAAwC,QAAxC;AACH,iBAJD;;AAMAC,wBAAQE,OAAR,CAAgBY,IAAhB,CAAqBf,OAArB,EAA8B,QAA9B,EAAwC,UAAUgB,KAAV,EAAiB;AACrD,wBAAIG,QAAQrB,EAAE,IAAF,CAAZ;AACA,wBAAIqB,MAAME,IAAN,CAAW,SAAX,MAA0B,IAA9B,EAAoC;AAChCnB,kCAAUO,QAAV,CAAmB,wBAAnB;AACH,qBAFD,MAEO;AACHP,kCAAUoB,WAAV,CAAsB,wBAAtB;AACH;AACJ,iBAPD,EAOG,IAPH;;AASA,oBAAI,OAAOtB,QAAQuB,IAAR,CAAa,OAAb,CAAP,KAAiC,WAAjC,IAAgDvB,QAAQuB,IAAR,CAAa,OAAb,EAAsBC,KAAtB,CAA4B,eAA5B,CAApD,EAAkG;AAC9F,wBAAIC,cAAczB,QAAQuB,IAAR,CAAa,OAAb,EAAsBC,KAAtB,CAA4B,eAA5B,CAAlB;AACA,yBAAK,IAAIE,GAAT,IAAgBD,WAAhB,EAA6B;AACzB,4BAAIE,aAAaF,YAAYC,GAAZ,CAAjB;AACAxB,kCAAUO,QAAV,CAAmB,oBAAoBkB,UAAvC;AACH;AACJ;;AAED3B,wBAAQ4B,IAAR;AACH,aA9CkB;AA+CnBC,sBAAU;AACNC,0BAAU;AADJ;AA/CS,SAAvB;AAmDH,KApDA,EAoDCC,MApDD,CAAD;AAqDH,CA3DD","file":"core.js","sourcesContent":["define([\r\n    '../../core/utils/data',\r\n    '../../core/utils/helper',\r\n    '../../core/utils/method',\r\n    '../../core/models/index'\r\n], (data, helper, method, model) => {\r\n    (function ($) {\r\n        new method('checkbox', {\r\n            init: function (element) {\r\n                var context = this;\r\n\r\n                var $checkbox = $(context.$helper.parseTemplate('checkbox'));\r\n                var $label = element.closest('label');\r\n                if ($label.length < 1) {\r\n                    element.wrap('<label class=\"works-checkbox-wrapper\"></label>');\r\n                } else {\r\n                    $label.addClass('works-checkbox-wrapper');\r\n                }\r\n\r\n                $checkbox.insertAfter(element).ripple({\r\n                    theme: 'dark',\r\n                    over: true,\r\n                    passive: true\r\n                });\r\n\r\n                context.$helper.bind(element.closest('label'), 'click', function (event) {\r\n                    event.stopPropagation();\r\n                });\r\n\r\n                context.$helper.bind(element, 'change', function (event, extra) {\r\n                    var $this = $(this);\r\n                    $checkbox.ripple('start');\r\n                    context.$helper.triggerHandler(element, 'update');\r\n                });\r\n\r\n                context.$helper.bind(element, 'update', function (event) {\r\n                    var $this = $(this);\r\n                    if ($this.prop('checked') === true) {\r\n                        $checkbox.addClass('works-checkbox-checked');\r\n                    } else {\r\n                        $checkbox.removeClass('works-checkbox-checked');\r\n                    }\r\n                }, true);\r\n\r\n                if (typeof element.attr('class') !== 'undefined' && element.attr('class').match(/input-(\\w+)/gi)) {\r\n                    var class_names = element.attr('class').match(/input-(\\w+)/gi);\r\n                    for (var idx in class_names) {\r\n                        var class_name = class_names[idx];\r\n                        $checkbox.addClass('works-checkbox-' + class_name);\r\n                    }\r\n                }\r\n\r\n                element.hide();\r\n            },\r\n            template: {\r\n                checkbox: '<span href=\"#\" class=\"works-checkbox\"></span>'\r\n            }\r\n        });\r\n    }(jQuery));\r\n});"]}