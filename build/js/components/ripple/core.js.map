{"version":3,"sources":["../../../../src/js/components/ripple/core.js"],"names":["define","data","helper","method","model","$","init","element","context","options","local","_options","each","$child","addClass","inArray","theme","supportThemes","$helper","bind","event","originalEvent","passive","$this","hasClass","offset","getClientRects","left","top","$ripple","parseTemplate","size","Math","min","width","height","scale","max","point","x","y","clientX","clientY","over","css","overflow","appendTo","promise","transform","opacity","remove","removeClass","start","value","triggerHandler","template","effect","jQuery"],"mappings":"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","file":"core.js","sourcesContent":["define([\r\n    '../../core/utils/data',\r\n    '../../core/utils/helper',\r\n    '../../core/utils/method',\r\n    '../../core/models/index'\r\n], (data, helper, method, model) => {\r\n    (function ($) {\r\n        new method('ripple', {\r\n            init: function (element) {\r\n                var context = this;\r\n                var options = context.local._options;\r\n\r\n                return element.each(function () {\r\n                    var $child = $(this);\r\n\r\n                    $child.addClass('btn-ripple');\r\n                    if ($.inArray(options.theme, options.supportThemes) !== -1) {\r\n                        $child.addClass('btn-ripple-' + options.theme);\r\n                    }\r\n\r\n                    context.$helper.bind($child, 'click', function (event) {\r\n                        if (typeof event.originalEvent !== 'undefined' && options.passive === true) {\r\n                            return false;\r\n                        }\r\n\r\n                        var $this = $(this);\r\n                        if (!$this.hasClass('btn-ripple')) {\r\n                            $child.addClass('btn-ripple');\r\n                            if ($.inArray(options.theme, options.supportThemes) !== -1) {\r\n                                $child.addClass('btn-ripple-' + options.theme);\r\n                            }\r\n                        }\r\n                        var offset = this.getClientRects()[0] || {left: 0, top: 0};\r\n                        var $ripple = $(context.$helper.parseTemplate('effect'));\r\n                        var size = Math.min($this.width(), $this.height());\r\n                        var scale = Math.max($this.width(), $this.height()) / size * 2;\r\n                        var point = {\r\n                            x: 0,\r\n                            y: 0\r\n                        };\r\n\r\n                        if (\r\n                            typeof event.x !== 'undefined' &&\r\n                            typeof event.y !== 'undefined'\r\n                        ) {\r\n                            point = {\r\n                                x: event.x - size / 2,\r\n                                y: event.y - size / 2\r\n                            };\r\n                        } else {\r\n                            point = {\r\n                                x: (event.clientX - offset.left) - size / 2,\r\n                                y: (event.clientY - offset.top) - size / 2\r\n                            };\r\n                        }\r\n\r\n                        if (options.over === true) {\r\n                            $child.css({\r\n                                overflow: 'visible'\r\n                            });\r\n                        }\r\n\r\n                        $ripple.css({ width: size, height: size, left: point.x, top: point.y });\r\n                        $ripple.appendTo($this);\r\n                        $this.addClass('btn-ripple-start');\r\n                        context.$helper.promise(function () {\r\n                            $ripple.css({\r\n                                transform: 'scale(' + scale + ')',\r\n                                opacity: 1\r\n                            });\r\n\r\n                            context.$helper.promise(function () {                            \r\n                                $ripple.addClass('anim-end').css({\r\n                                    opacity: 0 \r\n                                });\r\n\r\n                                context.$helper.promise(function () {\r\n                                    $ripple.remove();\r\n                                    $this.removeClass('btn-ripple-start');\r\n                                }, 500);\r\n                            }, 150);\r\n                        }, 50);\r\n                    });\r\n                });\r\n            },\r\n            method: {\r\n                start: function (element, value) {\r\n                    var context = this;\r\n\r\n                    if (typeof value === 'undefined') {\r\n                        value = {\r\n                            x: element.width() / 2,\r\n                            y: element.height() / 2\r\n                        };\r\n                    }\r\n\r\n                    context.$helper.triggerHandler(element, 'click', value);\r\n                }\r\n            },\r\n            template: {\r\n                effect: '<div class=\"btn-ripple-effect\"></div>'\r\n            },\r\n            options: {\r\n                supportThemes: [\r\n                    'light',\r\n                    'dark'\r\n                ],\r\n                over: false,\r\n                passive: false\r\n            }\r\n        });\r\n    }(jQuery));\r\n});"]}