{"version":3,"sources":["../../../../src/js/components/spinner/core.js"],"names":["define","data","helper","method","model","$","init","element","context","is","$selected","find","$spinner","$helper","parseTemplate","option","length","text","global","empty","attrs","prop","idx","attr","name","value","insertAfter","ripple","theme","hide","bind","event","focus","triggerHandler","$this","$target","addClass","preventDefault","stopPropagation","$scrollParent","scrollParent","$document","hasClass","$spinnerWrapper","console","log","each","$option","val","type","appendTo","css","$window","top","offset","left","outerWidth","outerHeight","scrollTop","height","children","prependTo","removeClass","promise","remove","unbind","template","spinner","spinnerWrapper","spinnerOptions","options","jQuery"],"mappings":"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","file":"core.js","sourcesContent":["define([\r\n    '../../core/utils/data',\r\n    '../../core/utils/helper',\r\n    '../../core/utils/method',\r\n    '../../core/models/index'\r\n], (data, helper, method, model) => {\r\n    (function($) {\r\n        new method('spinner', {\r\n            init: function (element) {\r\n                var context = this;\r\n\r\n                if (element.is('select') === false) {\r\n                    return false;\r\n                }\r\n\r\n                var $selected = element.find(':selected');\r\n                var $spinner = $(context.$helper.parseTemplate('spinner', {\r\n                    option: $selected.length > 0 ? $selected.text() : this.global.empty\r\n                }));\r\n\r\n                var attrs = element.prop(\"attributes\");\r\n                for (var idx in attrs) {\r\n                    var attr = attrs[idx];\r\n                    if (attr.name !== 'class' && attr.name !== 'style') {\r\n                        $spinner.attr(attr.name, attr.value);\r\n                    }\r\n                }\r\n                $spinner.insertAfter(element);\r\n                $spinner.ripple({\r\n                    theme: 'dark'\r\n                });\r\n                element.hide();\r\n\r\n                context.$helper.bind(element, 'focus', function (event) {\r\n                    $spinner.focus();\r\n                });\r\n\r\n                context.$helper.bind(element, 'change', function (event) {\r\n                    context.$helper.triggerHandler(element, 'update');\r\n                });\r\n\r\n                context.$helper.bind(element, 'update', function (event) {\r\n                    var $this = $(this);\r\n                    var $target = $this.find('option:selected');\r\n\r\n                    if ($target.length < 1) {\r\n                        $target = $this.find('option:first');\r\n                    }\r\n\r\n                    var text = $target.text();\r\n\r\n                    if (text !== '') {\r\n                        $spinner.find('.spinner-txt').text(text);\r\n                    }\r\n\r\n                    if (element.prop('disabled')) {\r\n                        $spinner.addClass('spinner-disabled');\r\n                    }\r\n\r\n                    if (element.prop('readonly')) {\r\n                        $spinner.addClass('spinner-readonly');\r\n                    }\r\n                });\r\n\r\n                context.$helper.bind($spinner, 'click', function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    var $this = $(this);\r\n                    var $scrollParent = $this.scrollParent();\r\n\r\n                    context.$helper.triggerHandler(context.element.$document, 'click');\r\n                    if ($this.hasClass('spinner-disabled') || $this.hasClass('spinner-readonly')) {\r\n                        return false;\r\n                    }\r\n                    var $spinnerWrapper = $(context.$helper.parseTemplate('spinnerWrapper'));\r\n\r\n                    console.log('test', element, element.find('option'), $spinner, context);\r\n                    element.find('option').each(function () {\r\n                        var $this = $(this);\r\n                        var $option = $(context.$helper.parseTemplate('spinnerOptions', {\r\n                            value: $this.val(),\r\n                            option: $this.text(),\r\n                            type: ($this.prop('selected') === true && $this.text() !== '')? 'selected':'default'\r\n                        }));\r\n\r\n                        if ($this.prop('selected') === true) {\r\n                            $spinner.find('.spinner-txt').text($this.text());\r\n                        }\r\n\r\n                        $option.ripple({\r\n                            theme: 'dark'\r\n                        }).appendTo($spinnerWrapper);\r\n                    });\r\n                    $spinnerWrapper.appendTo('body').css('position', 'absolute');\r\n                    $spinnerWrapper.addClass('anim-start');\r\n\r\n                    context.$helper.bind($scrollParent, 'scroll', function (event) {\r\n                        context.$helper.triggerHandler(context.element.$window, 'resize');\r\n                    });\r\n\r\n                    context.$helper.bind(context.element.$window, 'resize', function () {\r\n                        $spinnerWrapper.css({\r\n                            top: $spinner.offset().top,\r\n                            left: $spinner.offset().left + (($spinner.outerWidth() - $spinnerWrapper.outerWidth()) / 2)\r\n                        });\r\n                        if ($spinnerWrapper.offset().top + $spinnerWrapper.outerHeight() > context.element.$window.scrollTop() + context.element.$window.height()) {\r\n                            $spinnerWrapper.children('.spinner-option').each(function () {\r\n                                var $this = $(this);\r\n                                $this.prependTo($spinnerWrapper);\r\n                            });\r\n                            $spinnerWrapper.css({\r\n                                top: $spinner.offset().top + $spinner.outerHeight() - $spinnerWrapper.outerHeight()\r\n                            });\r\n                        }\r\n                    }, true);\r\n\r\n                    context.$helper.bind(context.element.$document, 'click', function () {\r\n                        $spinnerWrapper.removeClass('anim-start');\r\n                        context.$helper.promise(function () {\r\n                            $spinnerWrapper.remove();\r\n                        }, 300);\r\n                        context.$helper.unbind(context.element.$window, 'resize');\r\n                        context.$helper.unbind(context.element.$document, 'click');\r\n                    });\r\n\r\n                    context.$helper.bind($spinnerWrapper.find('.spinner-option'), 'click', function (event) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        var $this = $(this);\r\n                        $spinnerWrapper.removeClass('anim-start');\r\n                        context.$helper.promise(function () {\r\n                            $spinnerWrapper.remove();\r\n                        }, 300);\r\n                        element.val($this.data('value'));\r\n                        context.$helper.triggerHandler(element, 'change', true);\r\n                        context.$helper.unbind(context.element.$window, 'resize');\r\n                        context.$helper.unbind(context.element.$document, 'click');\r\n                    });\r\n                });\r\n            },\r\n            template: {\r\n                spinner: '<a href=\"#\" class=\"spinner\"><span class=\"spinner-txt\">{option}</span><i class=\"spinner-arrow pe-7s-angle-down\"></i></a>',\r\n                spinnerWrapper: '<div class=\"spinner-wrapper\"></div>',\r\n                spinnerOptions: '<a href=\"#\" class=\"spinner-option spinner-{type}\" data-value=\"{value}\">{option}</a>'\r\n            },\r\n            options: {\r\n                empty: '선택'\r\n            }\r\n        });\r\n    }(jQuery));\r\n});"]}