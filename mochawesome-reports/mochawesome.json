{
  "reportTitle": "homeworks",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 6,
    "tests": 8,
    "passes": 7,
    "pending": 0,
    "failures": 1,
    "start": "2017-03-14T16:23:52.447Z",
    "end": "2017-03-14T16:23:52.606Z",
    "duration": 159,
    "testsRegistered": 8,
    "passPercent": 87.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "[core/utils/method] TEST",
        "suites": [
          {
            "title": "#1 method() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 `component` METHOD DEFINITION.",
                "fullTitle": "[core/utils/method] TEST #1 method() TEST @1 `component` METHOD DEFINITION.",
                "timedOut": false,
                "duration": 12,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, target</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component1'</span>, <span class=\"hljs-string\">'COMPONENT ID is \\'component\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT INIT is true.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS of key is \\'value\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
                "err": {
                  "name": "AssertionError",
                  "message": "COMPONENT ID is 'component'.",
                  "stack": "AssertionError: COMPONENT ID is <span class=\"hljs-string\">'component'</span>.<br>    at <span class=\"hljs-built_in\">Object</span>.init (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">39</span>:<span class=\"hljs-number\">32</span>)<br>    at HTMLDivElement.ElementBinder (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">113</span>:<span class=\"hljs-number\">38</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at jQuery.fn.init.Method.route (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">160</span>:<span class=\"hljs-number\">33</span>)<br>    at jQuery.fn.init.bindFunc [<span class=\"hljs-keyword\">as</span> component] (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">183</span>:<span class=\"hljs-number\">46</span>)<br>    at jQuery.fn.init.&lt;anonymous&gt; (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">64</span>:<span class=\"hljs-number\">22</span>)<br>    at HTMLDivElement.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">63</span>:<span class=\"hljs-number\">34</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at Document.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">51</span>:<span class=\"hljs-number\">18</span>)<br>    at mightThrow (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3570</span>:<span class=\"hljs-number\">29</span>)<br>    at process (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3638</span>:<span class=\"hljs-number\">12</span>)<br>    at Timeout.callback [<span class=\"hljs-keyword\">as</span> _onTimeout] (node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:<span class=\"hljs-number\">477</span>:<span class=\"hljs-number\">19</span>)"
                },
                "isRoot": false,
                "uuid": "1a88ade6-a46b-4831-9805-6f5e1655ace6",
                "parentUUID": "f6a8b9bb-79de-408f-8385-af51b22b3c4a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\method.js",
            "uuid": "f6a8b9bb-79de-408f-8385-af51b22b3c4a",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\method.js",
            "passes": [],
            "failures": [
              {
                "title": "@1 `component` METHOD DEFINITION.",
                "fullTitle": "[core/utils/method] TEST #1 method() TEST @1 `component` METHOD DEFINITION.",
                "timedOut": false,
                "duration": 12,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, target</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component1'</span>, <span class=\"hljs-string\">'COMPONENT ID is \\'component\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT INIT is true.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS of key is \\'value\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
                "err": {
                  "name": "AssertionError",
                  "message": "COMPONENT ID is 'component'.",
                  "stack": "AssertionError: COMPONENT ID is <span class=\"hljs-string\">'component'</span>.<br>    at <span class=\"hljs-built_in\">Object</span>.init (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">39</span>:<span class=\"hljs-number\">32</span>)<br>    at HTMLDivElement.ElementBinder (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">113</span>:<span class=\"hljs-number\">38</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at jQuery.fn.init.Method.route (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">160</span>:<span class=\"hljs-number\">33</span>)<br>    at jQuery.fn.init.bindFunc [<span class=\"hljs-keyword\">as</span> component] (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">183</span>:<span class=\"hljs-number\">46</span>)<br>    at jQuery.fn.init.&lt;anonymous&gt; (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">64</span>:<span class=\"hljs-number\">22</span>)<br>    at HTMLDivElement.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">63</span>:<span class=\"hljs-number\">34</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at Document.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">51</span>:<span class=\"hljs-number\">18</span>)<br>    at mightThrow (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3570</span>:<span class=\"hljs-number\">29</span>)<br>    at process (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3638</span>:<span class=\"hljs-number\">12</span>)<br>    at Timeout.callback [<span class=\"hljs-keyword\">as</span> _onTimeout] (node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:<span class=\"hljs-number\">477</span>:<span class=\"hljs-number\">19</span>)"
                },
                "isRoot": false,
                "uuid": "1a88ade6-a46b-4831-9805-6f5e1655ace6",
                "parentUUID": "f6a8b9bb-79de-408f-8385-af51b22b3c4a",
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 10000,
        "file": "\\src\\js\\core\\utils\\test\\method.js",
        "uuid": "f2a810b1-0f81-43c2-abea-2ab612af0f1b",
        "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\method.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "[core/utils/prototype] TEST",
        "suites": [
          {
            "title": "#1 String.prototype.mapping() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "9205dc94-de8e-488a-b513-b4f100c107ed",
                "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
                "isRoot": false,
                "uuid": "36c33258-2677-49e2-809a-21c390c1d721",
                "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\prototype.js",
            "uuid": "3fbec78c-9f25-430a-818f-4547af01bf28",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
            "passes": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "9205dc94-de8e-488a-b513-b4f100c107ed",
                "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
                "isRoot": false,
                "uuid": "36c33258-2677-49e2-809a-21c390c1d721",
                "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#2 String.prototype.format() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "028a0546-cf65-4311-b021-864a02cdffc3",
                "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
                "isRoot": false,
                "uuid": "4b21a353-05c7-4ad4-82a4-2a42904d094f",
                "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\prototype.js",
            "uuid": "db624ead-cfee-42a2-a374-78da264eb349",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
            "passes": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "028a0546-cf65-4311-b021-864a02cdffc3",
                "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
                "isRoot": false,
                "uuid": "4b21a353-05c7-4ad4-82a4-2a42904d094f",
                "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#3 Function.prototype.hook() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "56ab356a-20cd-4a77-8aa1-bdeefd329031",
                "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
                "skipped": false
              },
              {
                "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "2a282942-5181-478a-b902-4331e217efb6",
                "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
                "skipped": false
              },
              {
                "title": "@3 BINDED VALUE MUST BE `true`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "00a3afbd-5ba7-4eed-bd9c-17b271eb679a",
                "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\prototype.js",
            "uuid": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
            "passes": [
              {
                "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "56ab356a-20cd-4a77-8aa1-bdeefd329031",
                "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
                "skipped": false
              },
              {
                "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "2a282942-5181-478a-b902-4331e217efb6",
                "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
                "skipped": false
              },
              {
                "title": "@3 BINDED VALUE MUST BE `true`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "00a3afbd-5ba7-4eed-bd9c-17b271eb679a",
                "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 10000,
        "file": "\\src\\js\\core\\utils\\test\\prototype.js",
        "uuid": "3624f324-ada6-4859-a784-b590e145cbed",
        "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 10000,
    "uuid": "2910c599-bb59-4fe6-b8c8-e7756adbcbe0",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "@1 `component` METHOD DEFINITION.",
      "fullTitle": "#1 method() TEST @1 `component` METHOD DEFINITION.",
      "timedOut": false,
      "duration": 12,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, target</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component1'</span>, <span class=\"hljs-string\">'COMPONENT ID is \\'component\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT INIT is true.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS of key is \\'value\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
      "err": {
        "name": "AssertionError",
        "message": "COMPONENT ID is 'component'.",
        "stack": "AssertionError: COMPONENT ID is <span class=\"hljs-string\">'component'</span>.<br>    at <span class=\"hljs-built_in\">Object</span>.init (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">39</span>:<span class=\"hljs-number\">32</span>)<br>    at HTMLDivElement.ElementBinder (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">113</span>:<span class=\"hljs-number\">38</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at jQuery.fn.init.Method.route (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">160</span>:<span class=\"hljs-number\">33</span>)<br>    at jQuery.fn.init.bindFunc [<span class=\"hljs-keyword\">as</span> component] (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">183</span>:<span class=\"hljs-number\">46</span>)<br>    at jQuery.fn.init.&lt;anonymous&gt; (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">64</span>:<span class=\"hljs-number\">22</span>)<br>    at HTMLDivElement.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">63</span>:<span class=\"hljs-number\">34</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at Document.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">51</span>:<span class=\"hljs-number\">18</span>)<br>    at mightThrow (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3570</span>:<span class=\"hljs-number\">29</span>)<br>    at process (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3638</span>:<span class=\"hljs-number\">12</span>)<br>    at Timeout.callback [<span class=\"hljs-keyword\">as</span> _onTimeout] (node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:<span class=\"hljs-number\">477</span>:<span class=\"hljs-number\">19</span>)"
      },
      "isRoot": false,
      "uuid": "0034ec0b-5141-4608-aea9-7e19aad007db",
      "parentUUID": "f6a8b9bb-79de-408f-8385-af51b22b3c4a",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "01103d08-d64c-4a45-9fa5-a4ab5f75fccf",
      "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
      "isRoot": false,
      "uuid": "885cd9b2-4867-47a1-835e-bb56c282bd22",
      "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "1556b8ab-225e-408b-b910-fc30e7640a5b",
      "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "fullTitle": "#2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
      "isRoot": false,
      "uuid": "794ee3ec-3b3a-4460-83b3-da12d9e31526",
      "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
      "skipped": false
    },
    {
      "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "ea6fc952-9a0e-4d42-af24-61a070e574c6",
      "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
      "skipped": false
    },
    {
      "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "17633841-c656-4238-bf88-c6a1a3b5ccb2",
      "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
      "skipped": false
    },
    {
      "title": "@3 BINDED VALUE MUST BE `true`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "c81676b9-6a6d-4f7e-b2de-09c65241e1f3",
      "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "97e35fdc-9770-4ffa-b0c5-aa4fa9db31e9",
      "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
      "isRoot": false,
      "uuid": "890bdaa9-0db9-4770-824e-443837ef0811",
      "parentUUID": "3fbec78c-9f25-430a-818f-4547af01bf28",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "0a2d7f0f-09de-45d0-98e6-1b9005080397",
      "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "fullTitle": "#2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
      "isRoot": false,
      "uuid": "a9fc97ab-99aa-4b85-96af-7b42a9e189d9",
      "parentUUID": "db624ead-cfee-42a2-a374-78da264eb349",
      "skipped": false
    },
    {
      "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "9b8b77e7-aeb4-4bc8-9afd-df8efeea4e8d",
      "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
      "skipped": false
    },
    {
      "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "53530847-ec5b-4066-9eac-4c0ec0f92f14",
      "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
      "skipped": false
    },
    {
      "title": "@3 BINDED VALUE MUST BE `true`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "ec107401-58bb-47f6-9122-a76233fcd82d",
      "parentUUID": "fcbdd1d0-fd8a-496b-8e64-372bc51d0f60",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "@1 `component` METHOD DEFINITION.",
      "fullTitle": "#1 method() TEST @1 `component` METHOD DEFINITION.",
      "timedOut": false,
      "duration": 12,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, target</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component1'</span>, <span class=\"hljs-string\">'COMPONENT ID is \\'component\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT INIT is true.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS of key is \\'value\\'.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">target, value</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
      "err": {
        "name": "AssertionError",
        "message": "COMPONENT ID is 'component'.",
        "stack": "AssertionError: COMPONENT ID is <span class=\"hljs-string\">'component'</span>.<br>    at <span class=\"hljs-built_in\">Object</span>.init (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">39</span>:<span class=\"hljs-number\">32</span>)<br>    at HTMLDivElement.ElementBinder (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">113</span>:<span class=\"hljs-number\">38</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at jQuery.fn.init.Method.route (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">160</span>:<span class=\"hljs-number\">33</span>)<br>    at jQuery.fn.init.bindFunc [<span class=\"hljs-keyword\">as</span> component] (src\\js\\core\\utils\\method.js:<span class=\"hljs-number\">183</span>:<span class=\"hljs-number\">46</span>)<br>    at jQuery.fn.init.&lt;anonymous&gt; (src\\js\\core\\utils\\test\\method.js:<span class=\"hljs-number\">64</span>:<span class=\"hljs-number\">22</span>)<br>    at HTMLDivElement.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">63</span>:<span class=\"hljs-number\">34</span>)<br>    at <span class=\"hljs-built_in\">Function</span>.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">368</span>:<span class=\"hljs-number\">19</span>)<br>    at jQuery.fn.init.each (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">157</span>:<span class=\"hljs-number\">17</span>)<br>    at Document.&lt;anonymous&gt; (src\\js\\core\\utils\\prototype.js:<span class=\"hljs-number\">51</span>:<span class=\"hljs-number\">18</span>)<br>    at mightThrow (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3570</span>:<span class=\"hljs-number\">29</span>)<br>    at process (node_modules\\jquery\\dist\\jquery.js:<span class=\"hljs-number\">3638</span>:<span class=\"hljs-number\">12</span>)<br>    at Timeout.callback [<span class=\"hljs-keyword\">as</span> _onTimeout] (node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:<span class=\"hljs-number\">477</span>:<span class=\"hljs-number\">19</span>)"
      },
      "isRoot": false,
      "uuid": "77af2a84-6e23-4304-b2f1-698b9a24f993",
      "parentUUID": "f6a8b9bb-79de-408f-8385-af51b22b3c4a",
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}