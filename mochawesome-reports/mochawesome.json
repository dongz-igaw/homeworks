{
  "reportTitle": "homeworks",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 6,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2017-03-17T05:22:17.236Z",
    "end": "2017-03-17T05:22:17.356Z",
    "duration": 120,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "[core/utils/method] TEST",
        "suites": [
          {
            "title": "#1 method() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 `component` METHOD DEFINITION.",
                "fullTitle": "[core/utils/method] TEST #1 method() TEST @1 `component` METHOD DEFINITION.",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, args</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> global = context.global;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL ID MUST BE `component`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT LOCAL INIT MUST BE `true`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(<span class=\"hljs-keyword\">typeof</span> local._prototype.init, <span class=\"hljs-string\">'function'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL PROTOTYPE MUST HAVE `init` function.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS OF KEY MUST BE `value`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.deepEqual(options, $.extend(args, {<br>                msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>            }), <span class=\"hljs-string\">'COMPONENT LOCAL OPTIONS MATCH THE ARGUMENT THAT HOOK SAND.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.target.is($(<span class=\"hljs-string\">'#pen'</span>)), <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS.target MUST BE `pen` element.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.msg, <span class=\"hljs-string\">'Hello HOMEWORKS'</span>, <span class=\"hljs-string\">'COMPONENT GLOBAL OPTION KEY `msg` MUST BE `Hello HOMEWORKS`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    },<br>    options: {<br>        msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        target: options.target,<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
                "isRoot": false,
                "uuid": "65330ec1-7b01-4b21-975f-079c50f71de8",
                "parentUUID": "1b2b5914-4c6e-46ff-affb-0b4bd2976fa0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\method.js",
            "uuid": "1b2b5914-4c6e-46ff-affb-0b4bd2976fa0",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\method.js",
            "passes": [
              {
                "title": "@1 `component` METHOD DEFINITION.",
                "fullTitle": "[core/utils/method] TEST #1 method() TEST @1 `component` METHOD DEFINITION.",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, args</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> global = context.global;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL ID MUST BE `component`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT LOCAL INIT MUST BE `true`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(<span class=\"hljs-keyword\">typeof</span> local._prototype.init, <span class=\"hljs-string\">'function'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL PROTOTYPE MUST HAVE `init` function.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS OF KEY MUST BE `value`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.deepEqual(options, $.extend(args, {<br>                msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>            }), <span class=\"hljs-string\">'COMPONENT LOCAL OPTIONS MATCH THE ARGUMENT THAT HOOK SAND.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.target.is($(<span class=\"hljs-string\">'#pen'</span>)), <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS.target MUST BE `pen` element.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.msg, <span class=\"hljs-string\">'Hello HOMEWORKS'</span>, <span class=\"hljs-string\">'COMPONENT GLOBAL OPTION KEY `msg` MUST BE `Hello HOMEWORKS`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    },<br>    options: {<br>        msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        target: options.target,<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
                "isRoot": false,
                "uuid": "65330ec1-7b01-4b21-975f-079c50f71de8",
                "parentUUID": "1b2b5914-4c6e-46ff-affb-0b4bd2976fa0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 10000,
        "file": "\\src\\js\\core\\utils\\test\\method.js",
        "uuid": "1ccbb5de-6a1f-48f0-a5b1-0b063dcc1416",
        "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\method.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "[core/utils/prototype] TEST",
        "suites": [
          {
            "title": "#1 String.prototype.mapping() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "f989112a-4a57-4048-817e-a257df751bbe",
                "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
                "isRoot": false,
                "uuid": "c75528d7-5d1a-40c6-b546-32124044e929",
                "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\prototype.js",
            "uuid": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
            "passes": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "f989112a-4a57-4048-817e-a257df751bbe",
                "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "fullTitle": "[core/utils/prototype] TEST #1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
                "isRoot": false,
                "uuid": "c75528d7-5d1a-40c6-b546-32124044e929",
                "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#2 String.prototype.format() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "f34c0b5c-c6aa-4fb6-98ad-9eaa8d34266a",
                "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
                "isRoot": false,
                "uuid": "db72bbd5-0308-4622-8e8b-d2a8a7db5a66",
                "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\prototype.js",
            "uuid": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
            "passes": [
              {
                "title": "@1 STRING MUST BE `Hello World`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
                "isRoot": false,
                "uuid": "f34c0b5c-c6aa-4fb6-98ad-9eaa8d34266a",
                "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
                "skipped": false
              },
              {
                "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "fullTitle": "[core/utils/prototype] TEST #2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
                "isRoot": false,
                "uuid": "db72bbd5-0308-4622-8e8b-d2a8a7db5a66",
                "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#3 Function.prototype.hook() TEST",
            "suites": [],
            "tests": [
              {
                "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "24af32e5-4def-45bd-9ceb-1ac34f10f1a7",
                "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
                "skipped": false
              },
              {
                "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = options.target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "ef355e46-5006-4917-ab7c-f42563aa9e6d",
                "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
                "skipped": false
              },
              {
                "title": "@3 BINDED VALUE MUST BE `true`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(options.value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "fa8c52ab-732f-4339-a123-45971c80279d",
                "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "\\src\\js\\core\\utils\\test\\prototype.js",
            "uuid": "e2706530-df5d-4c59-ad67-b179b21d519b",
            "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
            "passes": [
              {
                "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "24af32e5-4def-45bd-9ceb-1ac34f10f1a7",
                "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
                "skipped": false
              },
              {
                "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = options.target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "ef355e46-5006-4917-ab7c-f42563aa9e6d",
                "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
                "skipped": false
              },
              {
                "title": "@3 BINDED VALUE MUST BE `true`.",
                "fullTitle": "[core/utils/prototype] TEST #3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(options.value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
                "isRoot": false,
                "uuid": "fa8c52ab-732f-4339-a123-45971c80279d",
                "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 10000,
        "file": "\\src\\js\\core\\utils\\test\\prototype.js",
        "uuid": "612b8a5b-bf42-40c5-bf00-74cc523619f3",
        "fullFile": "C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\CampaignIntelligence\\CampaignIntelligence\\Content\\homeworks\\src\\js\\core\\utils\\test\\prototype.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 10000,
    "uuid": "09be09ff-1258-4d45-8bbe-f271a2c47476",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "@1 `component` METHOD DEFINITION.",
      "fullTitle": "#1 method() TEST @1 `component` METHOD DEFINITION.",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, args</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> global = context.global;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL ID MUST BE `component`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT LOCAL INIT MUST BE `true`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(<span class=\"hljs-keyword\">typeof</span> local._prototype.init, <span class=\"hljs-string\">'function'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL PROTOTYPE MUST HAVE `init` function.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS OF KEY MUST BE `value`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.deepEqual(options, $.extend(args, {<br>                msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>            }), <span class=\"hljs-string\">'COMPONENT LOCAL OPTIONS MATCH THE ARGUMENT THAT HOOK SAND.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.target.is($(<span class=\"hljs-string\">'#pen'</span>)), <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS.target MUST BE `pen` element.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.msg, <span class=\"hljs-string\">'Hello HOMEWORKS'</span>, <span class=\"hljs-string\">'COMPONENT GLOBAL OPTION KEY `msg` MUST BE `Hello HOMEWORKS`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    },<br>    options: {<br>        msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        target: options.target,<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
      "isRoot": false,
      "uuid": "9b761321-b4e4-4701-90c1-c2cd63f80e27",
      "parentUUID": "1b2b5914-4c6e-46ff-affb-0b4bd2976fa0",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "b0cca989-443d-40c5-8e8e-cf9d9928b06e",
      "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
      "isRoot": false,
      "uuid": "a978cb18-7417-4cc1-bf9d-79f337f2d39f",
      "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "1603bb76-e552-47f7-ada8-871ab2d024e4",
      "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "fullTitle": "#2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
      "isRoot": false,
      "uuid": "e19c1e99-dff3-4e84-9cdf-bff69a5f2358",
      "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
      "skipped": false
    },
    {
      "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "4c432bdb-89e4-424a-a990-f5e8b758b85a",
      "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
      "skipped": false
    },
    {
      "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = options.target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "640797f2-2d1d-46c7-9326-a8d9d7ffed3e",
      "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
      "skipped": false
    },
    {
      "title": "@3 BINDED VALUE MUST BE `true`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(options.value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "086e2319-885a-4a38-9497-d2e7429a217b",
      "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "@1 `component` METHOD DEFINITION.",
      "fullTitle": "#1 method() TEST @1 `component` METHOD DEFINITION.",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> method(<span class=\"hljs-string\">'component'</span>, {<br>    init: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">element, args</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> context = <span class=\"hljs-keyword\">this</span>;<br>        <span class=\"hljs-keyword\">var</span> local = context.local;<br>        <span class=\"hljs-keyword\">var</span> global = context.global;<br>        <span class=\"hljs-keyword\">var</span> options = local._options;<br>        <br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._id, <span class=\"hljs-string\">'component'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL ID MUST BE `component`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(local._init, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT LOCAL INIT MUST BE `true`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(<span class=\"hljs-keyword\">typeof</span> local._prototype.init, <span class=\"hljs-string\">'function'</span>, <span class=\"hljs-string\">'COMPONENT LOCAL PROTOTYPE MUST HAVE `init` function.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.key, <span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS OF KEY MUST BE `value`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.deepEqual(options, $.extend(args, {<br>                msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>            }), <span class=\"hljs-string\">'COMPONENT LOCAL OPTIONS MATCH THE ARGUMENT THAT HOOK SAND.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.target.is($(<span class=\"hljs-string\">'#pen'</span>)), <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'COMPONENT OPTIONS.target MUST BE `pen` element.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        <span class=\"hljs-keyword\">try</span> {<br>            assert.equal(options.msg, <span class=\"hljs-string\">'Hello HOMEWORKS'</span>, <span class=\"hljs-string\">'COMPONENT GLOBAL OPTION KEY `msg` MUST BE `Hello HOMEWORKS`.'</span>);<br>        } <span class=\"hljs-keyword\">catch</span>(error) {<br>            <span class=\"hljs-keyword\">return</span> done(error);<br>        }<br>        done();<br>    },<br>    options: {<br>        msg: <span class=\"hljs-string\">'Hello HOMEWORKS'</span><br>    }<br>});<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> args = {<br>        target: options.target,<br>        key: <span class=\"hljs-string\">'value'</span><br>    };          <br>    <span class=\"hljs-keyword\">this</span>.component(args);<br>}).hook(<span class=\"hljs-string\">'component'</span>);",
      "isRoot": false,
      "uuid": "c373e4f4-e6a1-4069-84f7-68f1513f564c",
      "parentUUID": "1b2b5914-4c6e-46ff-affb-0b4bd2976fa0",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{hello} {world}'</span>.mapping({<br>    hello: <span class=\"hljs-string\">'Hello'</span>,<br>    world: <span class=\"hljs-string\">'World'</span><br>}), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "dafe9328-52c6-46db-bc2c-a7b7a894c4ee",
      "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "fullTitle": "#1 String.prototype.mapping() TEST @2 STRING MUST BE `I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'I think {name} is better than most modern framework ever, So I think you have to use {name} {when}!'</span>.mapping({<br>    name: <span class=\"hljs-string\">'Homeworks'</span>,<br>    when: <span class=\"hljs-string\">'right now'</span><br>}), <span class=\"hljs-string\">'I think Homeworks is better than most modern framework ever, So I think you have to use Homeworks right now!'</span>);",
      "isRoot": false,
      "uuid": "5d7d981f-ba7d-4baf-8868-cd72fd729b14",
      "parentUUID": "c04c8abf-2895-4b19-b4cb-6e0cb6646b13",
      "skipped": false
    },
    {
      "title": "@1 STRING MUST BE `Hello World`.",
      "fullTitle": "#2 String.prototype.format() TEST @1 STRING MUST BE `Hello World`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} {1}'</span>.format([<span class=\"hljs-string\">'Hello'</span>, <span class=\"hljs-string\">'World'</span>]), <span class=\"hljs-string\">'Hello World'</span>);",
      "isRoot": false,
      "uuid": "c1e7f2d7-1112-4a7a-af87-ec286d66fa8d",
      "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
      "skipped": false
    },
    {
      "title": "@2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "fullTitle": "#2 String.prototype.format() TEST @2 STRING MUST BE `Government of the people, by the people, for the people`.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'{0} of the {1}, by the {1}, for the {1}'</span>.format([<span class=\"hljs-string\">'Government'</span>, <span class=\"hljs-string\">'people'</span>]), <span class=\"hljs-string\">'Government of the people, by the people, for the people'</span>);",
      "isRoot": false,
      "uuid": "690e2613-ea00-4e62-bc72-54eb65379c60",
      "parentUUID": "5e3e5027-9d6b-41a2-a687-246627bcb2a3",
      "skipped": false
    },
    {
      "title": "@1 BINDED ELEMENT ID MUST BE `test`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @1 BINDED ELEMENT ID MUST BE `test`.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> elementID = <span class=\"hljs-keyword\">this</span>.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(elementID, <span class=\"hljs-string\">'test'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "3550b9c9-48a1-4a1f-b04d-58c4bf55eb80",
      "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
      "skipped": false
    },
    {
      "title": "@2 TARGETED ELEMENT ID MUST BE `target`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @2 TARGETED ELEMENT ID MUST BE `target`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> targetID = options.target.attr(<span class=\"hljs-string\">'id'</span>);<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(targetID, <span class=\"hljs-string\">'target'</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "f1d4d922-27cd-4101-a32f-a73e79846a88",
      "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
      "skipped": false
    },
    {
      "title": "@3 BINDED VALUE MUST BE `true`.",
      "fullTitle": "#3 Function.prototype.hook() TEST @3 BINDED VALUE MUST BE `true`.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">options</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>        assert.equal(options.value, <span class=\"hljs-literal\">true</span>);<br>    } <span class=\"hljs-keyword\">catch</span>(error) {<br>        <span class=\"hljs-keyword\">return</span> done(error);<br>    }                    <br>    done();<br>}).hook(<span class=\"hljs-string\">'test'</span>);",
      "isRoot": false,
      "uuid": "58b17b12-a96e-4ee5-b7d8-fd1d03a8c295",
      "parentUUID": "e2706530-df5d-4c59-ad67-b179b21d519b",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}